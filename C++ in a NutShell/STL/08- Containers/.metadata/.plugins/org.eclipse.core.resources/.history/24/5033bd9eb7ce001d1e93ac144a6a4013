#include <iostream>
#include <algorithm>
#include <map>



// std::map:
// - Similar to dictionary.
// - Elements are stores as Key,Value pairs (std::pair).
// - Ordered by key.
// - No duplicated elements.
// - Direct element access using the key.
// - All iterators are available a nd invalidate when the corresponding element is deleted.







class Person{
private:
    int age;
    std::string name;

public:
    Person() = default;

    Person(std::string Name, int Age)
    {
        name = Name;
         age = Age;
    }

    friend std::ostream& operator << (std::ostream& os, const Person& obj)
    {
        os<<obj.name<<" is "<<obj.age<<" years old"<<std::endl;
        return os;
    }

    void operator = (const Person& obj)
    {
    	 age = obj.age;
    	name = obj.name;
    }

    bool operator < (const Person& obj) const
    {
         return( (this->age < obj.age)&&(this->name < obj.name) );
    }

    bool operator > (const Person& obj) const
    {
         return( (this->age > obj.age)&&(this->name > obj.name) );
    }


    bool operator == (const Person& obj) const
    {
         return( (this->age == obj.age)&&(this->name == obj.name) );
    }


    ~Person() {}

};



int main(void)
{







	return 0;
}





